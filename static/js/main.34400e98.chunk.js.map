{"version":3,"sources":["components/Navbar.jsx","components/Input.jsx","components/CountryModal.jsx","components/CountryCard.jsx","App.js","index.js"],"names":["Navbar","props","isdark","setIsdark","darkTheme","lightTheme","style","className","onClick","prevVal","Input","ismodalopen","searchVal","setSearchVal","selectVal","setSelectVal","display","value","onChange","e","target","type","name","id","placeholder","backgroundColor","color","CountryModal","setIsmodalopen","ismymodalopen","setIsmymodalopen","flag","population","region","capital","nativeName","subRegion","topLevelDomain","currencies","languages","bordersArr","src","alt","map","border","index","CountryCard","useState","lightThemeInput","App","countriesarr","setCountriesarr","useEffect","timeOutId","setTimeout","a","axios","get","res","data","getDataBySearch","clearTimeout","getDataBySelect","countryObj","subregion","borders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34400e98.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  const { isdark, setIsdark, darkTheme, lightTheme } = props;\r\n\r\n  function toggleDarkMode() {\r\n    setIsdark((prevVal) => {\r\n      return !prevVal;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header style={isdark ? darkTheme : lightTheme}>\r\n        <div className=\"container\">\r\n          <p className=\"logo\">where in the world?</p>\r\n          <p onClick={toggleDarkMode} className=\"color-mode\">\r\n            <span\r\n              className={`${isdark ? \"fas fa-moon\" : \"far fa-moon\"}`}\r\n            ></span>\r\n            Dark Mode\r\n          </p>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Input(props) {\r\n  const {\r\n    isdark,\r\n    darkTheme,\r\n    lightTheme,\r\n    ismodalopen,\r\n    searchVal,\r\n    setSearchVal,\r\n    selectVal,\r\n    setSelectVal,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ display: ismodalopen ? \"none\" : \"flex\" }}\r\n        className=\"input-container container\"\r\n      >\r\n        <div className=\"input-div\">\r\n          <span\r\n            style={isdark ? darkTheme : lightTheme}\r\n            className=\"fas fa-search\"\r\n          ></span>\r\n          <input\r\n            style={isdark ? darkTheme : lightTheme}\r\n            value={searchVal}\r\n            onChange={(e) => setSearchVal(e.target.value)}\r\n            type=\"text\"\r\n            name=\"country\"\r\n            id=\"country\"\r\n            placeholder=\"Search a country...\"\r\n          />\r\n        </div>\r\n        <select\r\n          style={isdark ? darkTheme : lightTheme}\r\n          name=\"region\"\r\n          id=\"region\"\r\n          value={selectVal}\r\n          onChange={(e) => setSelectVal(e.target.value)}\r\n        >\r\n          <option value=\"none\">Fliter by region</option>\r\n          <option value=\"Africa\">Africa</option>\r\n          <option value=\"Europe\">Europe</option>\r\n          <option value=\"America\">America</option>\r\n          <option value=\"Asia\">Asia</option>\r\n          <option value=\"Oceania\">Oceania</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst darkTheme = {\r\n  backgroundColor: \"hsl(209, 23%, 22%)\",\r\n  color: \"white\",\r\n};\r\n\r\nconst lightTheme = {\r\n  backgroundColor: \"white\",\r\n  color: \"hsl(200, 15%, 8%)\",\r\n};\r\n\r\nexport default function CountryModal(props) {\r\n  const {\r\n    ismodalopen,\r\n    setIsmodalopen,\r\n    ismymodalopen,\r\n    setIsmymodalopen,\r\n    isdark,\r\n    flag,\r\n    name,\r\n    population,\r\n    region,\r\n    capital,\r\n    nativeName,\r\n    subRegion,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n    bordersArr,\r\n  } = props;\r\n\r\n  function goBack() {\r\n    setIsmodalopen(!ismodalopen);\r\n    setIsmymodalopen(!ismymodalopen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ display: ismymodalopen ? \"block\" : \"none\" }}\r\n        className=\"modal-container\"\r\n      >\r\n        <div className=\"container\">\r\n          <button\r\n            style={isdark ? darkTheme : lightTheme}\r\n            onClick={goBack}\r\n            className=\"back-btn btn-default\"\r\n          >\r\n            <span className=\"fas fa-long-arrow-alt-left\"></span> Back\r\n          </button>\r\n          <div className=\"modal-content\">\r\n            <div className=\" img-col\">\r\n              <img src={flag} alt=\"img\" />\r\n            </div>\r\n            <div className=\" info-col\">\r\n              <p\r\n                style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                className=\"country-name\"\r\n              >\r\n                {name}\r\n              </p>\r\n              <div className=\"details-container\">\r\n                <div className=\"details-col1\">\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Native Name :<span className=\"value\"> {nativeName}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Population :<span className=\"value\"> {population}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Region :<span className=\"value\"> {region}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Sub Region :<span className=\"value\"> {subRegion}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Capital :<span className=\"value\"> {capital}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"details-col2\">\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Top Level Domain :\r\n                    <span className=\"value\"> {topLevelDomain}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Currencies :<span className=\"value\"> {currencies}</span>\r\n                  </p>\r\n                  <p\r\n                    style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n                    className=\"property\"\r\n                  >\r\n                    Languages :<span className=\"value\"> {languages}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"borders-info\">\r\n                <span style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}>\r\n                  Border Countries\r\n                </span>\r\n                <div className=\"info-btns\">\r\n                  {bordersArr.map((border, index) => {\r\n                    return (\r\n                      <button\r\n                        key={index}\r\n                        style={isdark ? darkTheme : lightTheme}\r\n                        className=\"btn-default\"\r\n                      >\r\n                        {border}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CountryModal from \"./CountryModal\";\r\n\r\nexport default function CountryCard(props) {\r\n  const {\r\n    isdark,\r\n    ismodalopen,\r\n    setIsmodalopen,\r\n    flag,\r\n    name,\r\n    population,\r\n    region,\r\n    capital,\r\n    nativeName,\r\n    subRegion,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n    bordersArr,\r\n  } = props;\r\n  const [ismymodalopen, setIsmymodalopen] = useState(false);\r\n\r\n  function toggleModal() {\r\n    setIsmodalopen(!ismodalopen);\r\n    setIsmymodalopen(!ismymodalopen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: isdark ? \"hsl(209, 23%, 22%)\" : \"white\",\r\n          display: ismodalopen ? \"none\" : \"flex\",\r\n        }}\r\n        onClick={toggleModal}\r\n        className=\"country-card\"\r\n      >\r\n        <div className=\"image-container\">\r\n          <img src={flag} alt=\"img\" />\r\n        </div>\r\n        <div className=\"card-text\">\r\n          <p\r\n            style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n            className=\"country-name\"\r\n          >\r\n            {name}\r\n          </p>\r\n          <p\r\n            style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n            className=\"property\"\r\n          >\r\n            Population:\r\n            <span className=\"value\">{population}</span>\r\n          </p>\r\n          <p\r\n            style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n            className=\"property\"\r\n          >\r\n            Region:\r\n            <span className=\"value\">{region}</span>\r\n          </p>\r\n          <p\r\n            style={{ color: isdark ? \"white\" : \"hsl(200, 15%, 8%)\" }}\r\n            className=\"property\"\r\n          >\r\n            Capital:\r\n            <span className=\"value\">{capital}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <CountryModal\r\n        ismodalopen={ismodalopen}\r\n        setIsmodalopen={setIsmodalopen}\r\n        ismymodalopen={ismymodalopen}\r\n        setIsmymodalopen={setIsmymodalopen}\r\n        isdark={isdark}\r\n        flag={flag}\r\n        name={name}\r\n        population={population}\r\n        region={region}\r\n        capital={capital}\r\n        nativeName={nativeName}\r\n        subRegion={subRegion}\r\n        topLevelDomain={topLevelDomain}\r\n        currencies={currencies}\r\n        languages={languages}\r\n        bordersArr={bordersArr}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Input from \"./components/Input\";\nimport CountryCard from \"./components/CountryCard\";\nimport axios from \"axios\";\n\nconst darkTheme = {\n  backgroundColor: \"hsl(209, 23%, 22%)\",\n  color: \"white\",\n};\n\nconst lightTheme = {\n  backgroundColor: \"white\",\n  color: \"hsl(200, 15%, 8%)\",\n};\n\nconst lightThemeInput = {\n  backgroundColor: \"white\",\n  color: \"hsl(0, 0%, 52%)\",\n};\n\nfunction App() {\n  const [isdark, setIsdark] = useState(false);\n  const [ismodalopen, setIsmodalopen] = useState(false);\n  const [countriesarr, setCountriesarr] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [selectVal, setSelectVal] = useState(\"\");\n\n  // change in input search value\n  useEffect(() => {\n    let timeOutId = setTimeout(() => {\n      async function getDataBySearch() {\n        let res = await axios.get(\n          `https://restcountries.eu/rest/v2/name/${searchVal}`\n        );\n        const data = res.data;\n        setCountriesarr(data);\n      }\n\n      if (searchVal !== \"\") {\n        getDataBySearch();\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, [searchVal]);\n\n  //cahnge in selected value from options\n  useEffect(() => {\n    async function getDataBySelect() {\n      let res = await axios.get(\n        `https://restcountries.eu/rest/v2/region/${selectVal}`\n      );\n      const data = res.data;\n      setCountriesarr(data);\n    }\n\n    if (selectVal !== \"\") {\n      getDataBySelect();\n    }\n  }, [selectVal]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isdark ? \"hsl(207, 26%, 17%)\" : \"hsl(0, 0%, 98%)\",\n      }}\n      className=\"main-container\"\n    >\n      <Navbar\n        isdark={isdark}\n        setIsdark={setIsdark}\n        darkTheme={darkTheme}\n        lightTheme={lightTheme}\n      />\n      <Input\n        isdark={isdark}\n        darkTheme={darkTheme}\n        lightTheme={lightThemeInput}\n        ismodalopen={ismodalopen}\n        searchVal={searchVal}\n        setSearchVal={setSearchVal}\n        selectVal={selectVal}\n        setSelectVal={setSelectVal}\n      />\n      <div\n        style={{ display: ismodalopen ? \"block\" : \"grid\" }}\n        className=\"countries-container container\"\n      >\n        {countriesarr.map((countryObj, index) => {\n          return (\n            <CountryCard\n              key={index}\n              isdark={isdark}\n              ismodalopen={ismodalopen}\n              setIsmodalopen={setIsmodalopen}\n              flag={countryObj.flag}\n              name={countryObj.name}\n              population={countryObj.population}\n              region={countryObj.region}\n              capital={countryObj.capital}\n              nativeName={countryObj.nativeName}\n              subRegion={countryObj.subregion}\n              topLevelDomain={countryObj.topLevelDomain[0]}\n              currencies={countryObj.currencies[0].name}\n              languages={countryObj.languages[0].name}\n              bordersArr={countryObj.borders}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}